@page "/products/create"
@using WebApp.Data
@rendermode InteractiveServer
@inject AppDbContext Db
@inject NavigationManager Nav

<h3>バックパックの追加</h3>

<EditForm Model="@product" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="mb-3">
        <label>Brand</label>
        <InputText class="form-control" @bind-Value="product.brand"/>
    </div>

    <div class="mb-3">
        <label>Price($)</label>
        <InputNumber class="form-control" @bind-Value="product.price"/>
    </div>

    <div class="mb-3">
        <label>Weight(kg)</label>
        <InputNumber class="form-control" @bind-Value="product.weight_capacity_kg"/>
    </div>

    <div class="mb-3 form-check">
        <InputCheckbox class="form-check-input" @bind-Value="product.waterproof"/>
        <label class="form-check-label">Waterproof</label>
    </div>

    <div class="mb-3">
        <label>Size</label>
        <InputText class="form-control" @bind-Value="product.size"/>
    </div>

    <div class="mb-3">
        <label>Color</label>
        <InputText class="form-control" @bind-Value="product.color"/>
    </div>

    <div class="mb-3">
        <label>Style</label>
        <InputText class="form-control" @bind-Value="product.style"/>
    </div>

    <div class="mb-3">
        <label>Spaces</label>
        <InputNumber class="form-control" @bind-Value="product.compartments"/>
    </div>

    <div class="mt-3">
        <button class="btn btn-primary me-2" type="submit">Save</button>
        <button class="btn btn-secondary" type="button" @onclick="GoBack">Cancel</button>
    </div>
</EditForm>

@code {
    private readonly Product product = new();

    private async Task HandleValidSubmit()
    {
        Db.Products.Add(product);
        await Db.SaveChangesAsync();
        Nav.NavigateTo("/products");
    }

    private void GoBack()
    {
        Nav.NavigateTo("/products");
    }

}