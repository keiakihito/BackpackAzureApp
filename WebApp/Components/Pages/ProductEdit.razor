@page "/products/edit/{id:int}"
@using WebApp.Data
@rendermode InteractiveServer
@inject AppDbContext Db
@inject NavigationManager Nav

<h3>製品情報の編集</h3>

@if (product == null)
{
    <p><em>読み込み中...</em></p>
}
else
{
    <EditForm Model="@product" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <div class="mb-3">
            <label>ブランド</label>
            <InputText class="form-control" @bind-Value="product.brand"/>
        </div>

        <div class="mb-3">
            <label>価格</label>
            <InputNumber class="form-control" @bind-Value="product.price"/>
        </div>

        <div class="mb-3">
            <label>容量(kg)</label>
            <InputNumber class="form-control" @bind-Value="product.weight_capacity_kg"/>
        </div>

        <div class="mb-3 form-check">
            <InputCheckbox class="form-check-input" @bind-Value="product.waterproof"/>
            <label class="form-check-label">撥水加工</label>
        </div>

        <div class="mb-3">
            <label>サイズ</label>
            <InputText class="form-control" @bind-Value="product.size"/>
        </div>

        <div class="mb-3">
            <label>カラー</label>
            <InputText class="form-control" @bind-Value="product.color"/>
        </div>

        <div class="mb-3">
            <label>スタイル</label>
            <InputText class="form-control" @bind-Value="product.style"/>
        </div>

        <div class="mb-3">
            <label>収納数</label>
            <InputNumber class="form-control" @bind-Value="product.compartments"/>
        </div>

        <div class="mt-3">
            <button class="btn btn-primary me-2" type="submit">保存</button>
            <button class="btn btn-secondary" type="button" @onclick="GoBack">キャンセル</button>
        </div>
    </EditForm>
}

@code {
    [Parameter] public int id { get; set; }

    private Product? product;

    protected override async Task OnInitializedAsync()
    {
        product = await Db.Products.FindAsync(id);
    }

    private async Task HandleValidSubmit()
    {
        Db.Products.Update(product!);
        await Db.SaveChangesAsync();
        Nav.NavigateTo("/products");
    }

    private void GoBack()
    {
        Nav.NavigateTo("/products");
    }

}
